ls()
getwd()
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="n", xlab="IQ Values", ylab="",
main="Normal Distribution", axes=FALSE)
x <- seq(-4,4,length=100)*1 + 0
hx <- dnorm(x,0,1)
plot(x, hx, type="n", xlab="IQ Values", ylab="", main="Normal Distribution", axes=FALSE)
x <- seq(-4,4,length=100)*15 + 100
hx <- dnorm(x,0,1)
plot(x, hx, type="n", xlab="IQ Values", ylab="", main="Normal Distribution", axes=FALSE)
x
hx
mean=100; sd=15
lb=80; ub=120
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="n", xlab="IQ Values", ylab="",
main="Normal Distribution", axes=FALSE)
seq(-4,4,length=100)*sd + mean
x
hx <- dnorm(x,0,1)
plot(x, hx, type="n", xlab="IQ Values", ylab="", main="Normal Distribution", axes=FALSE)
hx
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
data(flight)
getc <- function(tot = 10^7){
a <- sample(1:10^9, tot)
c <- sum(a %in% 1:1000)
return(c)
}
n7 <- replicate(10, getc(tot=10^7))
n7
res <- res.csv("~/Desktop/res.csv")
res <- read.csv("~/Desktop/res.csv")
hist(res$n7)
par(mfrow=c(1,2))
hist(res$n7)
par(mfrow=c(2,1))
hist(res$n7)
hist(res$n8)
range(res$n7)
range(res$n8)
hist(res$n7, xlim=c(0, 20))
hist(res$n8, xlim=c(0, 200))
hist(res$n7, xlim=c(0, 20), main= paste("Sampling", expression(10^7), "Molecules" )
)
expression(10^7)
?expression
hist(res$n7, xlim=c(0, 20), main= labels=expression(0, 5%*%10^5, 1.5%*%10^6, 2.5%*%10^6) )
hist(res$n7, xlim=c(0, 20), main=expression(0, 5%*%10^5, 1.5%*%10^6, 2.5%*%10^6) )
hist(res$n7, xlim=c(0, 20), labels= expression(0, 5%*%10^5, 1.5%*%10^6, 2.5%*%10^6) )
x <- seq(-4, 4, len = 101)
y <- cbind(sin(x), cos(x))
matplot(x, y, type = "l", xaxt = "n",
main = expression(paste(plain(sin) * phi, "  and  ",
plain(cos) * phi)),
ylab = expression("sin" * phi, "cos" * phi), # only 1st is taken
xlab = expression(paste("Phase Angle ", phi)),
col.main = "blue")
axis(1, at = c(-pi, -pi/2, 0, pi/2, pi),
labels = expression(-pi, -pi/2, 0, pi/2, pi))
hist(res$n7, xlim=c(0, 20), main = expression(0, 5%*%10^5, 1.5%*%10^6, 2.5%*%10^6) )
hist(res$n7, xlim=c(0, 20), main = expression(5%*%10^5, 1.5%*%10^6, 2.5%*%10^6) )
hist(res$n7, xlim=c(0, 20), main = expression(paste("Sampling", 10^7, "Molecules")), xlab="" )
hist(res$n7, xlim=c(0, 20), main = expression(paste("Sampling ", 10^7, " Molecules")), xlab="" )
par(mfrow=c(2,1))
hist(res$n7, xlim=c(0, 20), main = expression(paste("Sampling ", 10^7, " Molecules")), xlab="" )
hist(res$n8, xlim=c(0, 200), main = expression(paste("Sampling ", 10^8, " Molecules")), xlab="" )
library(GenomicFeatures)
install.packages("GenomicFeatures")
library(GenomicFeatures)
install.packages("GenomicsFeatures")
source("http://bioconductor.org/biocLite.R")
biocLite("GenomicFeatures")
library(GenomicFeatures)
?makeTranscriptDbFromGFF
?makeTranscriptDbFromGFF()
browseVignettes("GenomicFeatures")
###################################################
### code chunk number 2: loadDb
###################################################
samplefile <- system.file("extdata", "UCSC_knownGene_sample.sqlite",
package="GenomicFeatures")
txdb <- loadDb(samplefile)
version()
version
